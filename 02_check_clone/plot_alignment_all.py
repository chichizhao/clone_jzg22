#!/py3
# -- coding: utf-8 --
# author: zhaochichi github: https://github.com/chichizhao/clone_jzg22
# function : plot total sanger results in one figure
# here we use the out txt file  that is generated by the script "plot2.py"
# usage: python plot_alignment_all.py -sanger sanger_txt_path
import sys
import os
import matplotlib.pyplot as plt
import argparse
from collections import defaultdict 
from statistics import mean
import numpy as np

def get_args():
    parser = argparse.ArgumentParser(description="plot total sanger results in one figure")
    parser.add_argument('-sanger',dest='sanger',type=str,help="sanger txt path")
    args = parser.parse_args()
    return args

def read_sanger(sanger):
    sanger_dict = {}
    file_list = {}
    for file in os.listdir(sanger):
        if file.endswith('.txt'):
            file_list[file] = os.path.join(sanger,file)
    for file in file_list:
        with open(file_list[file],'r') as f:
            for line in f:
                line = line.strip()
                if line.startswith('C'):
                    line = line.split('\t')
                    chr = line[0]
                    if line[0] not in sanger_dict:
                        sanger_dict[line[0]] = {}
                else:
                    line = line.split('\t')
                    pos = line[0].split('.')[2]
                    sanger_dict[chr][pos] = []
                    ref = line[0].split('.')[1]
                    sanger_dict[chr][pos].append(ref)
                    for i in range(1,len(line)):
                        atcg = line[i].replace('[','').replace(']','').replace(' ','').split(',')
                        g_line = atcg[0:11]
                        a_line = atcg[11:22]
                        t_line = atcg[22:33]
                        c_line = atcg[33:44]
                        sanger_dict[chr][pos].append(g_line)
                        sanger_dict[chr][pos].append(a_line)
                        sanger_dict[chr][pos].append(t_line)
                        sanger_dict[chr][pos].append(c_line)
    chr_order = ['Chr03','Chr04','Chr05','Chr07','Chr09','Chr11','Chr12','Chr13','Chr14_1','Chr14_2','Chr15']
    return sanger_dict,chr_order

def plot_sanger(sanger_dict,chr_order):
    color_group = ['#FF4136','#0074D9','#2ECC40','#FFDC00']
    fig, ax = plt.subplots()
    fig.set_size_inches(16, 20)
    ax.set_aspect('equal')
    ax.set_xlim(0, 77)
    ax.set_ylim(1, 69)

    y= 0
    for chr in range(len(chr_order)):
        pos_list = sanger_dict[chr_order[chr]].keys()
        sorted_pos_list = sorted(pos_list,key=lambda x:int(x))
        for pos in sorted_pos_list:
            y += 1
            ref = str(sanger_dict[chr_order[chr]][pos][0])
            for i in range(72):
                for j in range(4):
                    G_line = list(sanger_dict[chr_order[chr]][pos][i*4+1])
                    A_line = list(sanger_dict[chr_order[chr]][pos][i*4+2])
                    T_line = list(sanger_dict[chr_order[chr]][pos][i*4+3])
                    C_line = list(sanger_dict[chr_order[chr]][pos][i*4+4])
                    for k in range(len(G_line)):
                        G_line[k] = int(G_line[k])/1500 + y
                        A_line[k] = int(A_line[k])/1500 + y
                        T_line[k] = int(T_line[k])/1500 + y
                        C_line[k] = int(C_line[k])/1500 + y
                    x = []
                    for l in range(11):
                        x.append(l/12+i+0.1)
                    g_line = plt.plot(x,G_line,color=color_group[0],linewidth=0.4)
                    a_line = plt.plot(x,A_line,color=color_group[1],linewidth=0.4)
                    t_line = plt.plot(x,T_line,color=color_group[2],linewidth=0.4)
                    c_line = plt.plot(x,C_line,color=color_group[3],linewidth=0.4)              

    y =0
    for chr in range(len(chr_order)):
        pos_list = sanger_dict[chr_order[chr]].keys()
        sorted_pos_list = sorted(pos_list,key=lambda x:int(x))
        for pos in sorted_pos_list:
            y += 1
            ref = str(sanger_dict[chr_order[chr]][pos][0])
            #print(ref)
            for i in range(72):
                for j in range(4):
                    box = plt.Rectangle((i,y),1, 1, fill=False, edgecolor='black', lw=0.2)
                    ax.add_artist(box)
            if ref == 'a':
                box = plt.Rectangle((72, y), 5, 1, fill=False, edgecolor='grey', lw=0.1, alpha=0.8)
                ax.add_artist(box)
                ax.text(72.05, y+0.31, 'A', fontsize=8, color=color_group[1])
                #box = plt.Rectangle((72.37, i+0.15), 0.5, 0.1, facecolor='black', edgecolor='black', lw=0.1, alpha=0.5,angle=60)
                ax.add_artist(box)
                ax.text(72.31, y+0.01, 'T', fontsize=4, color=color_group[2])
            elif ref == 'c':
                box = plt.Rectangle((72, y), 5, 1, fill=False, edgecolor='grey', lw=0.1, alpha=0.8)
                ax.add_artist(box)
                ax.text(72.05, y+0.31, 'C', fontsize=8, color=color_group[3])
                ax.text(72.31, y+0.01, 'G', fontsize=4, color=color_group[0])
            elif ref == 'g':
                box = plt.Rectangle((72, y), 5, 1, fill=False, edgecolor='grey', lw=0.1, alpha=0.8)
                ax.add_artist(box)
                ax.text(72.05, y+0.31, 'G', fontsize=8, color=color_group[0])
                ax.text(72.31, y+0.01, 'C', fontsize=4, color=color_group[3])
            elif ref == 't':
                box = plt.Rectangle((72, y), 5, 1, fill=False, edgecolor='grey', lw=0.1, alpha=0.8)
                ax.add_artist(box)
                ax.text(72.05, y+0.31, 'T', fontsize=8, color=color_group[2])
                ax.text(72.31, y+0.01, 'A', fontsize=4, color=color_group[1]) 
            ax.text(72.5, y+0.1, ':'+str(pos), fontsize=8)
        box = plt.Rectangle((0, y-len(sorted_pos_list)+1), 77, len(sorted_pos_list), fill=False, edgecolor='black', lw=0.4)
        ax.add_artist(box)
        if int(chr)%2 == 0:
            box = plt.Rectangle((76.33, y-len(sorted_pos_list)+1), 0.65, len(sorted_pos_list), facecolor='#C5E0B4', edgecolor='black', lw=0.4)
        else:
            box = plt.Rectangle((76.33, y-len(sorted_pos_list)+1), 0.65, len(sorted_pos_list), facecolor='#FFE699', edgecolor='black', lw=0.4)
        ax.add_artist(box)
        ax.text(76.7, y-len(sorted_pos_list)/2+1, str(chr_order[chr]), fontsize=8, rotation=90, ha='center', va='center')
    for i in range(72):
        box = plt.Rectangle((i, 67), 1, 1, fill=False, edgecolor='black', lw=0.4)
        ax.add_artist(box)
        ax.text(i+0.5, 67.3, str(i+1), fontsize=8, ha='center')
    box = plt.Rectangle((72, 67), 5, 1, fill=False, edgecolor='black', lw=0.4)
    ax.add_artist(box)
    ax.text(74.5, 67.3, 'Ref:Pos Chr', fontsize=8, ha='center')
    box = plt.Rectangle((0,1), 77, 67, fill=False, edgecolor='black', lw=0.4)
    ax.add_artist(box)
    ax.text(0.5, 68.2, 'Samples', fontsize=8)
    ax.text(4.5, 68.2, 'G', fontsize=8, color=color_group[0])
    box = plt.Rectangle((5.3, 68.5), 4.5, 0.1, facecolor=color_group[0], edgecolor=color_group[0], lw=0.1,alpha=0.8)
    ax.add_artist(box)
    ax.text(10.5, 68.2, 'A', fontsize=8, color=color_group[1])
    box = plt.Rectangle((11.3, 68.5), 4.5, 0.1, facecolor=color_group[1], edgecolor=color_group[1], lw=0.1,alpha=0.8)
    ax.add_artist(box)
    ax.text(16.5, 68.2, 'T', fontsize=8, color=color_group[2])
    box = plt.Rectangle((17.3, 68.5), 4.5, 0.1, facecolor=color_group[2], edgecolor=color_group[2], lw=0.1,alpha=0.8)
    ax.add_artist(box)
    ax.text(22.5, 68.2, 'C', fontsize=8, color=color_group[3])
    box = plt.Rectangle((23.3, 68.5), 4.5, 0.1, facecolor=color_group[3], edgecolor=color_group[3], lw=0.1,alpha=0.8)
    ax.add_artist(box)
    ax.axis('off')
    plt.savefig('Sanger.png',dpi=300)
def main():
    args = get_args()
    sanger_dict,chr_order = read_sanger(args.sanger)
    plot_sanger(sanger_dict,chr_order)
if __name__ == '__main__':
    main()